definitions:
  models.CheckUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.CheckUserResponse:
    properties:
      id:
        type: string
    type: object
  models.CreateOrgRequest:
    properties:
      name:
        type: string
      owner:
        type: string
    type: object
  models.CreateOrgResponse:
    properties:
      id:
        type: string
    type: object
  models.CreateUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.GetOrgsResponse:
    properties:
      orgs:
        items:
          type: string
        type: array
    type: object
  models.GetUsersResponse:
    properties:
      users:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: Manages users and organizations data
  title: User Service API
  version: "1.0"
paths:
  /health:
    get:
      responses:
        "200":
          description: OK
        default:
          description: ""
      summary: Get information if service is healthy
  /orgs:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrgsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all organization names
  /orgs/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrgRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateOrgResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new organization
  /users:
    get:
      description: Debug-only endpoint, should not be called from api gateway
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all usernames
  /users/check:
    post:
      consumes:
      - application/json
      parameters:
      - description: Log in
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CheckUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Check user data (Log in)
  /users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user
swagger: "2.0"
